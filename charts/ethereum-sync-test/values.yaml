cronjob:
  schedule: '0 0 * * 0'
  suspend: false
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  concurrencyPolicy: Forbid
  # activeDeadlineSeconds: 60000

  job:
    backoffLimit: 3
    restartPolicy: OnFailure
    ttlSecondsAfterFinished: 120
    terminationGracePeriodSeconds: 120

tolerations: []

nodeSelector: {}

affinity: {}

extraPorts: []

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Storage class for the volume claim template
  storageClassName: ""
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something
  # -- Host path configuration
  hostPath:
    enabled: false
    path: /opt/ethereum-sync-tests
    type: DirectoryOrCreate

global:
  initContainers:
    initStorage:
      enabled: true
      image:
        repository: busybox
        tag: "1.34.0"
        pullPolicy: IfNotPresent
      command:
        - /bin/sh
      args:
        - -c
        - rm -rf /data/*
        - rm -rf /data/kill-pod
        - mkdir -p /data/execution
        - mkdir -p /data/consensus
        - touch /data/execution/test.txt
        - touch /data/consensus/test.txt
        - ls /data
    initChownData:
      # -- Init container to set the correct permissions to access data directories
      enabled: true
      image:
        # -- Container repository
        repository: busybox
        # -- Container tag
        tag: "1.34.0"
        # -- Container pull policy
        pullPolicy: IfNotPresent
      # -- Resource requests and limits
      resources: {}
      #  limits:
      #    cpu: 100m
      #    memory: 128Mi
      #  requests:
      #    cpu: 100m
      #    memory: 128Mi

    generateJWT:
      enabled: true # If disabled you must provide a secret in global.jwtsecret
      name: generate-jwt-secret
      image:
        repository: alpine
        tag: latest
        pullPolicy: IfNotPresent
      command:
        - /bin/sh
        - -c
        - apk add openssl;
        - sleep 5;
        - openssl rand -hex 32 > /data/jwtsecret;
        - echo /data/jwtsecret;
      resources: {}
      #  limits:
      #    cpu: 100m
      #    memory: 128Mi
      #  requests:
      #    cpu: 100m
      #    memory: 128Mi
      volumeMounts:
      - name: storage
        mountPath: "/data"

  # When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
  # This is useful if you want to expose and announce your node to the Internet.
  # Limitation: You can only one have one replica when exposing via NodePort.
  #             Check the chart README.md for more details
  p2pNodePort:
    # -- Expose P2P port via NodePort
    enabled: false
    # -- Ports can be configured in global.ethereum.execution.client.ports.p2p_tcp etc
    initContainer:
      image:
        # -- Container image to fetch nodeport information
        repository: lachlanevenson/k8s-kubectl
        # -- Container tag
        tag: v1.21.3
        # -- Container pull policy
        pullPolicy: IfNotPresent

  networkConfigs:
    kiln:
      execution:
        config:
          bootnodes: https://config.kiln.themerge.dev/el/bootnodes
          genesis_geth: https://config.kiln.themerge.dev/el/genesis/geth.json
          nethermind_genesis_json: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/kiln/nethermind_genesis.json
          besu_genesis_json: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/kiln/besu_genesis.json
        args:
          geth:
            - --bootnodes="$(tr '\n' ',' < /data/execution/bootnode.txt)"
            - --networkid=$(cat /data/execution/chainid.txt)
            - --override.terminaltotaldifficulty=20000000000000
          nethermind:
            - --config=kiln
            - --Init.ChainSpecPath="/data/execution/nethermind_genesis.json"
            - --Merge.Enabled=true
            - --Merge.FeeRecipient=0x579Ece400030a1b9C04b8AD9764380859618E77d
            - --Merge.TerminalTotalDifficulty=20000000000000
          besu:
            - --network-id=$(cat /data/execution/chainid.txt)
            - --genesis-file="/data/execution/besu_genesis.json"
            - --bootnodes="$(tr '\n' ',' < /data/execution/bootnode.txt)"
            - --Xmerge-support=true
      consensus:
        config:
          bootnodes: https://config.kiln.themerge.dev/cl/bootnodes
          config_yaml: https://config.kiln.themerge.dev/cl/genesis/config.yaml
          genesis_ssz: https://config.kiln.themerge.dev/cl/genesis/genesis.ssz
          deploy_block_txt: https://config.kiln.themerge.dev/cl/genesis/deploy_block.txt
          deposit_contract_txt: https://config.kiln.themerge.dev/cl/genesis/deposit_contract.txt
          deposit_contract_block_txt: https://config.kiln.themerge.dev/cl/genesis/deposit_contract_block.txt
        args:
          lighthouse:
            - --testnet-dir=/data/consensus/testnet_spec
            - --boot-nodes="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)"
            - --merge
            - --terminal-total-difficulty-override=20000000000000
          prysm:
            - --bootstrap-node="$(head -n 1 /data/consensus/testnet_spec/bootstrap_nodes.txt)"
            - --genesis-state /data/consensus/testnet_spec/genesis.ssz
            - --chain-config-file=/data/consensus/testnet_spec/config.yaml
          teku:
            - --p2p-discovery-bootnodes="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)"
            - --network=/data/consensus/testnet_spec/config.yaml
            - --initial-state=/data/consensus/testnet_spec/genesis.ssz
            - --Xee-version=kilnv2
            - --Xnetwork-total-terminal-difficulty-override="20000000000000"

    goerli-shadow-fork-4:
      execution:
        config:
          bootnodes: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/el_bootnode.txt
          genesis_geth: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/genesis.json
          nethermind_genesis_json: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/nethermind_genesis.json
          besu_genesis_json: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/besu_genesis.json
        args:
          geth:
            - --bootnodes="$(tr '\n' ',' < /data/execution/bootnode.txt)"
            - --networkid=$(cat /data/execution/chainid.txt)
            - --override.terminaltotaldifficulty=9895202
          nethermind:
            - --config=goerli_shadowfork
            - --Init.ChainSpecPath="/data/execution/nethermind_genesis.json"
            - --Merge.Enabled=true
            - --Merge.FeeRecipient=0x579Ece400030a1b9C04b8AD9764380859618E77d
            - --Merge.TerminalTotalDifficulty=9895202
          besu:
            - --network-id=$(cat /data/execution/chainid.txt)
            - --genesis-file="/data/execution/besu_genesis.json"
            - --bootnodes="$(tr '\n' ',' < /data/execution/bootnode.txt)"
            - --Xmerge-support=true
      consensus:
        config:
          bootnodes: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/bootstrap_nodes.txt
          config_yaml: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/config.yaml
          genesis_ssz: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/genesis.ssz
          deploy_block_txt: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/deploy_block.txt
          deposit_contract_txt: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/deposit_contract.txt
          deposit_contract_block_txt: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/deposit_contract_block.txt
        args:
          lighthouse:
            - --testnet-dir=/data/consensus/testnet_spec
            - --boot-nodes="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)"
            - --merge
            - --terminal-total-difficulty-override=9895202
          prysm:
            - --bootstrap-node="$(head -n 1 /data/consensus/testnet_spec/bootstrap_nodes.txt)"
            - --genesis-state /data/consensus/testnet_spec/genesis.ssz
            - --chain-config-file=/data/consensus/testnet_spec/config.yaml
          teku:
            - --p2p-discovery-bootnodes="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)"
            - --network=/data/consensus/testnet_spec/config.yaml
            - --initial-state=/data/consensus/testnet_spec/genesis.ssz
            - --Xee-version=kilnv2
            - --Xnetwork-total-terminal-difficulty-override="9895202"

  ethereum:
    network: kiln

    execution:
      client:
        name: geth

      dataDir: /data/execution

      config:
        ports:
          engine_api: 8551
          engine_ws: 8555
          p2p_tcp: 30141
          p2p_udp: 30141
          http_rpc: 8545
          ws_rpc: 8546
          metrics: 6060


    consensus:
      client:
        name: prysm

      dataDir: /data/consensus

      config:
        ports:
          p2p_tcp: 30241
          p2p_udp: 30241
          http_api: 5052
          rpc: 5053
          metrics: 5054


  # -- The security context for pods
  # @default -- See `values.yaml`
  # TODO(sam.caldermason): Actually use this
  securityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001

## Metrics-Exporter
common:
  metricsExporter:
    enabled: true
    # image:
    #   repository: samcm/ethereum-metrics-exporter
    #   tag: latest
    #   pullPolicy: IfNotPresent
    port: 9090

## Client-specific config
geth:
  image:
    repository: ethereum/client-go
    tag: latest
    pullPolicy: Always

lighthouse:
  image:
    repository: sigp/lighthouse
    tag: latest
    pullPolicy: Always

prysm:
  image:
    repository: samcm/prysm-debian # Official prysm image doesnt have `sh` which is required for p2pnodeport
    # repository: gcr.io/prysmaticlabs/prysm/beacon-chain
    tag: latest
    pullPolicy: Always

nethermind:
  image:
    repository: nethermindeth/nethermind
    tag: latest
    pullPolicy: Always



rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true

  # serviceAccountName: ""
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the serices nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""