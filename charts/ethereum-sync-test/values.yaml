cronjob:
  schedule: '0 0 * * 0'
  suspend: false
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  concurrencyPolicy: Forbid
  # activeDeadlineSeconds: 60000

  job:
    backoffLimit: 3
    restartPolicy: OnFailure
    ttlSecondsAfterFinished: 120
    terminationGracePeriodSeconds: 15

tolerations: []

nodeSelector: {}

affinity: {}

extraPorts: []

persistence:
  # -- Uses an EmptyDir when not enabled
  enabled: false
  # -- Use an existing PVC when persistence.enabled
  existingClaim: null
  # -- Access mode for the volume claim template
  accessModes:
  - ReadWriteOnce
  # -- Storage class for the volume claim template
  storageClassName: ""
  # -- Requested size for volume claim template
  size: 20Gi
  # -- Annotations for volume claim template
  annotations: {}
  # -- Selector for volume claim template
  selector: {}
  #   matchLabels:
  #     app.kubernetes.io/name: something
  # -- Host path configuration
  hostPath:
    enabled: false
    path: /opt/ethereum-sync-tests
    type: DirectoryOrCreate

global:
  initContainers:
    initStorage:
      enabled: true
      image:
        repository: busybox
        tag: "1.34.0"
        pullPolicy: IfNotPresent
      command:
        - /bin/sh
        - -ace
        - | 
         rm -rf /data/*
         rm -rf /data/kill-pod
         mkdir -p /data/execution
         mkdir -p /data/consensus
         touch /data/execution/test.txt
         touch /data/consensus/test.txt
         ls /data
    initChownData:
      # -- Init container to set the correct permissions to access data directories
      enabled: true
      image:
        repository: busybox
        tag: "1.34.0"
        pullPolicy: IfNotPresent
      # -- Resource requests and limits
      resources: {}

    generateJWT:
      enabled: true # If disabled you must provide a secret in global.jwtsecret
      name: generate-jwt-secret
      image:
        repository: alpine
        tag: latest
        pullPolicy: IfNotPresent
      command:
        - /bin/sh
        - -ace
        - |
          apk add openssl
          openssl rand -hex 32 > /data/jwtsecret
          echo 'Done!'
      resources: {}
      volumeMounts:
      - name: storage
        mountPath: "/data"

  # When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
  # This is useful if you want to expose and announce your node to the Internet.
  # Limitation: You can only one have one replica when exposing via NodePort.
  #             Check the chart README.md for more details
  p2pNodePort:
    # -- Expose P2P port via NodePort
    enabled: false
    # -- Ports can be configured in global.ethereum.execution.client.ports.p2p_tcp etc
    initContainer:
      image:
        # -- Container image to fetch nodeport information
        repository: lachlanevenson/k8s-kubectl
        # -- Container tag
        tag: v1.21.3
        # -- Container pull policy
        pullPolicy: IfNotPresent

  networkConfigs:
    kiln:
      execution:
        static_peers: []
        config:
          bootnodes: https://config.kiln.themerge.dev/el/bootnodes
          genesis_geth: https://config.kiln.themerge.dev/el/genesis/geth.json
          nethermind_genesis_json: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/kiln/nethermind_genesis.json
          besu_genesis_json: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/kiln/besu_genesis.json
        args:
          geth:
            - --bootnodes="$(tr '\n' ',' < /data/execution/bootnode.txt)" \
            - --networkid=$(cat /data/execution/chainid.txt) \
            - --override.terminaltotaldifficulty=20000000000000
          nethermind:
            - --config=kiln \
            - --Init.ChainSpecPath="/data/execution/nethermind_genesis.json" \
            - --Merge.Enabled=true \
            - --Merge.FeeRecipient=0x579Ece400030a1b9C04b8AD9764380859618E77d \
            - --Merge.TerminalTotalDifficulty=20000000000000
          besu:
            - --network-id=$(cat /data/execution/chainid.txt) \
            - --genesis-file="/data/execution/besu_genesis.json" \
            - --bootnodes="$(tr '\n' ',' < /data/execution/bootnode.txt)"
      consensus:
        config:
          bootnodes: https://config.kiln.themerge.dev/cl/bootnodes
          config_yaml: https://config.kiln.themerge.dev/cl/genesis/config.yaml
          genesis_ssz: https://config.kiln.themerge.dev/cl/genesis/genesis.ssz
          deploy_block_txt: https://config.kiln.themerge.dev/cl/genesis/deploy_block.txt
          deposit_contract_txt: https://config.kiln.themerge.dev/cl/genesis/deposit_contract.txt
          deposit_contract_block_txt: https://config.kiln.themerge.dev/cl/genesis/deposit_contract_block.txt
        args:
          lighthouse:
            - --testnet-dir=/data/consensus/testnet_spec \
            - --boot-nodes="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)" \
            - --merge \
            - --terminal-total-difficulty-override=20000000000000
          prysm:
            - --bootstrap-node="$(head -n 1 /data/consensus/testnet_spec/bootstrap_nodes.txt)" \
            - --genesis-state /data/consensus/testnet_spec/genesis.ssz \
            - --chain-config-file=/data/consensus/testnet_spec/config.yaml
          teku:
            - --p2p-discovery-bootnodes="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)" \
            - --network=/data/consensus/testnet_spec/config.yaml \
            - --initial-state=/data/consensus/testnet_spec/genesis.ssz \
            - --Xee-version=kilnv2 \
            - --Xnetwork-total-terminal-difficulty-override="20000000000000"
          nimbus:
            - --network="/data/consensus/testnet_spec" \
            - --terminal-total-difficulty-override=20000000000000 \
            - --bootstrap-node="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)"

    goerli-shadow-fork-4:
      execution:
        static_peers:
        - enode://86396fd3a6984da2a31f2ae727132d9c364dd97dd7c6d80849c85dfdf086404c8d81cbf9fdad6b03f7f337c7c69ff36369a6fa4136e8f900e0353f0ff7a06811@167.172.183.95:30303
        - enode://b2673c4a42a0b6e78808c29f8adfc035ed0b957fe6d8c88197127f7bfcb5daee315c9bfab90e2b66cee4cf352ec0cd198e40517bb9805892253c871faf575d88@159.89.104.254:30303
        - enode://5428ff96491471de025697aa35038cd998c6569efc49c608483b268599a4708fd89dd91c62def7b260032b9d5206344fdb758aa5be10cba80bf535ca6117f1e2@167.172.187.230:30303
        - enode://ab3b7a85e1002dee09c3082d87f4e65083f1ef2baca0e3af5c7243fcc18e058da5633eed77325714ded3ce222f2a0d3aee4f172750dd71e3c7fce42691c9bebe@167.172.160.72:30303
        - enode://2c3f7cbbf6a26112682307a8c69ff2d8c4f8585b627b42557ec436350c30d9bb1a2a5a0e0e800f3153342903c4d1a6256987bd1e0e52b4214bb027199ce0383b@167.172.179.141:30303
        - enode://15647f46d521a8e60dd9d9a84ccc4d9e562d4874abaa980e935e1fddcc36da328fb13884e3976e00991b131106ae5c86ee389fdc9a115253c045908562e7750f@167.172.170.24:30303
        config:
          bootnodes: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/el_bootnode.txt
          genesis_geth: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/genesis.json
          nethermind_genesis_json: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/nethermind_genesis.json
          besu_genesis_json: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/besu_genesis.json
        args:
          geth:
            - --bootnodes="$(tr '\n' ',' < /data/execution/bootnode.txt)" \
            - --networkid=$(cat /data/execution/chainid.txt) \
            - --override.terminaltotaldifficulty=9895202
          nethermind:
            - --config=goerli_shadowfork \
            - --Init.ChainSpecPath="/data/execution/nethermind_genesis.json" \
            - --Merge.Enabled=true \
            - --Merge.FeeRecipient=0x579Ece400030a1b9C04b8AD9764380859618E77d \
            - --Merge.TerminalTotalDifficulty=9895202
          besu:
            - --network-id=$(cat /data/execution/chainid.txt) \
            - --genesis-file="/data/execution/besu_genesis.json" \
            - --bootnodes="$(tr '\n' ',' < /data/execution/bootnode.txt)"
      consensus:
        config:
          bootnodes: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/bootstrap_nodes.txt
          config_yaml: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/config.yaml
          genesis_ssz: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/genesis.ssz
          deploy_block_txt: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/deploy_block.txt
          deposit_contract_txt: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/deposit_contract.txt
          deposit_contract_block_txt: https://raw.githubusercontent.com/eth-clients/merge-testnets/main/goerli-shadow-fork-4/deposit_contract_block.txt
        args:
          lighthouse:
            - --testnet-dir=/data/consensus/testnet_spec \
            - --boot-nodes="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)" \
            - --merge \
            - --terminal-total-difficulty-override=9895202
          prysm:
            - --bootstrap-node="$(head -n 1 /data/consensus/testnet_spec/bootstrap_nodes.txt)" \
            - --genesis-state /data/consensus/testnet_spec/genesis.ssz \
            - --chain-config-file=/data/consensus/testnet_spec/config.yaml
          teku:
            - --p2p-discovery-bootnodes="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)" \
            - --network=/data/consensus/testnet_spec/config.yaml \
            - --initial-state=/data/consensus/testnet_spec/genesis.ssz \
            - --Xee-version=kilnv2 \
            - --Xnetwork-total-terminal-difficulty-override="9895202"
          nimbus:
            - --network="/data/consensus/testnet_spec" \
            - --terminal-total-difficulty-override=9895202 \
            - --bootstrap-node="$(tr '\n' ',' < /data/consensus/testnet_spec/bootstrap_nodes.txt)"

  ethereum:
    network: kiln

    execution:
      client:
        name: geth

      logLevel: info

      dataDir: /data/execution

      config:
        ports:
          engine_api: 8551
          engine_ws: 8555
          p2p_tcp: 30141
          p2p_udp: 30141
          http_rpc: 8545
          ws_rpc: 8546
          metrics: 6060


    consensus:
      client:
        name: prysm

      logLevel: info
      dataDir: /data/consensus

      config:
        ports:
          p2p_tcp: 30241
          p2p_udp: 30241
          http_api: 5052
          rpc: 5053
          metrics: 5054


  # -- The security context for pods
  # @default -- See `values.yaml`
  # TODO(sam.caldermason): Actually use this
  securityContext:
    fsGroup: 10001
    runAsGroup: 10001
    runAsNonRoot: true
    runAsUser: 10001

## Common values
common:
  coordinator:
    enabled: true
    image:
      repository: samcm/sync-test-coordinator
      tag: latest
      pullPolicy: IfNotPresent
    config_yaml:
      test:
        name: "basic"

        tasks:
          - name: sleep
            config:
              duration: 15s

          - name: execution_is_healthy
          - name: consensus_is_healthy

          - name: both_are_synced
            config:
              consensus:
                percent: 100
                wait_for_chain_progression: true
                min_slot_height: 10
              execution:
                percent: 100
                wait_for_chain_progression: true
                min_block_height: 10
                

          - name: run_command
            config:
              command:
                - "sh"
                - "-c"
                - "touch /data/execution/finished"

          - name: run_command
            config:
              command:
                - "sh"
                - "-c"
                - "touch /data/consensus/finished"
          - name: run_command
            config:
              command:
                - "sh"
                - "-c"
                - "pkill -INT -f /data/execution"
              allowed_to_fail: true

          - name: run_command
            config:
              command:
                - "sh"
                - "-c"
                - "pkill -INT -f /data/consensus"
              allowed_to_fail: true

          - name: run_command
            config:
              command:
                - "sh"
                - "-c"
                - "pkill -INT -f exporter"
              allowed_to_fail: true


      execution:
        url: http://localhost:8545

      consensus:
        url: http://localhost:5052

  metricsExporter:
    enabled: true
    # image:
    #   repository: samcm/ethereum-metrics-exporter
    #   tag: latest
    #   pullPolicy: IfNotPresent
    port: 9090

## Client-specific config
geth:
  image:
    repository: ethereum/client-go
    tag: latest
    pullPolicy: Always

nethermind:
  image:
    repository: nethermindeth/nethermind
    tag: latest
    pullPolicy: Always

besu:
  image:
    repository: hyperledger/besu
    tag: develop
    pullPolicy: Always


lighthouse:
  image:
    repository: sigp/lighthouse
    tag: latest
    pullPolicy: Always

prysm:
  image:
    repository: samcm/prysm-debian # Official prysm image doesnt have `sh` which is required for p2pnodeport
    # repository: gcr.io/prysmaticlabs/prysm/beacon-chain
    tag: latest
    pullPolicy: Always

teku:
  image:
    repository: consensys/teku
    tag: develop
    pullPolicy: Always

nimbus:
  image:
    repository: statusim/nimbus-eth2
    tag: amd64-latest
    pullPolicy: Always

rbac:
  # -- Specifies whether RBAC resources are to be created
  create: true

  # serviceAccountName: ""
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  clusterRules:
     # Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  # -- Required ClusterRole rules
  # @default -- See `values.yaml`
  rules:
    # Required to get information about the serices nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""